<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>br.com.infowhere.schoolproject</groupId>
	<artifactId>schoolproject</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging> <!-- projeto do tipo pom, nao pode ter codigo, eh apenas um agregador de projetos-->
	<name>Modulo parent do projeto</name>

	<modules>
		<module>modulo-service</module>
		<module>modulo-web</module>
	</modules>

    <properties>
        <org.unitils.version>3.4.2</org.unitils.version>
        <br.com.infowhere.projectutils>1.0-SNAPSHOT</br.com.infowhere.projectutils>
    </properties>

	<build>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

            <!-- GMaven plugin for unit tests -->
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <version>1.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12.4</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                        <include>**/*It.java</include>
                        <include>**/*Unit.java</include>
                    </includes>
                </configuration>
            </plugin>

		</plugins>
	</build>

	<!-- O dependency managmente define apenas as vesoes das dependencias, 
	nao significa que estas dependencias estarao em todos os projetos,
	mas se a dependencia for declarada em um projeto que herde esse pom, 
	nao precisa mais declarar escopo e versao -->
	<dependencyManagement> 
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>modulo-service</artifactId>
				<version>${project.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.7</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.6.5</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>1.0.6</version>
				<scope>runtime</scope>
			</dependency>

            <!-- COMMONS LANG -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.3.2</version>
                <scope>provided</scope>
            </dependency>

            <!-- Unitils -->
            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-mock</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-dbunit</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-core</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-inject</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-database</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-orm</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.unitils</groupId>
                <artifactId>unitils-spring</artifactId>
                <version>${org.unitils.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>project-utils</groupId>
                <artifactId>br.com.infowhere.projectutils</artifactId>
                <version>${br.com.infowhere.projectutils}</version>
            </dependency>

            <!-- FIM Unitils -->

	        </dependencies>
	</dependencyManagement>

	<!-- Se o projeto for herdado, essas dependencias farao parte do projeto
	filho, mesmo que voce nao declare no pom do projeto filho.
	Como teste e log eh algo que DEVE existir em todos os projetos, coloquei ele 
	aqui para serem herdados pelos outros.
	Perceba que nao precisei declarar escopo e versao pois isso ja foi
	definido no meu Dependencymanagment. Nos projetos filhos tb nao precisariam-->
    <dependencies>
        <dependency>
            <groupId>project-utils</groupId>
            <artifactId>br.com.infowhere.projectutils</artifactId>
        </dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-spring</artifactId>
        </dependency>

        <!-- COMMONS LANG -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Unitils -->
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-mock</artifactId>
        </dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-dbunit</artifactId>
        </dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-inject</artifactId>
        </dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-database</artifactId>
        </dependency>

        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-orm</artifactId>
        </dependency>

    </dependencies>


</project>
